

! function ($) {
    
      "usar estricto"; // jshint; _;
    
    
     / * DEFINICIÓN DE CLASES DROPDOWN
      * ====================== * /
    
      var toggle = '[data-toggle = "desplegable"]'
        , Dropdown = function (elemento) {
            var $ el = $ (elemento) .on ('click.dropdown.data-api', this.toggle)
            $ ('html'). on ('click.dropdown.data-api', function () {
              $ el.parent (). removeClass ('abierto')
            })
          }
    
      Dropdown.prototype = {
    
        constructor: Dropdown
    
      , alternar: función (e) {
          var $ this = $ (esto)
            , $ padre
            , selector
            , está activo
    
          if ($ this.is ('. disabled,: disabled')) return
    
          selector = $ this.attr ('data-target')
    
          if (! selector) {
            selector = $ this.attr ('href')
            selector = selector && selector.replace (/.* (? = # [^ \ s] * $) /, '') // tira para ie7
          }
    
          $ parent = $ (selector)
          $ parent.length || ($ parent = $ this.parent ())
    
          isActive = $ parent.hasClass ('open')
    
          clearMenus ()
    
          if (! isActive) $ parent.toggleClass ('open')
    
          falso retorno
        }
    
      }
    
      function clearMenus () {
        $ (alternar) .parent (). removeClass ('abrir')
      }
    
    
      / * DROPDOWN PLUGIN DEFINITION
       * ======================= * /
    
      $ .fn.dropdown = function (option) {
        return this.each (function () {
          var $ this = $ (esto)
            , data = $ this.data ('dropdown')
          if (! data) $ this.data ('dropdown', (data = new Dropdown (this)))
          if (typeof option == 'string') data [option] .call ($ this)
        })
      }
    
      $ .fn.dropdown.Constructor = Dropdown
    
    
      / * APLICA A ELEMENTOS ESTÁNDAR DE CAÍDA
       * ==================== * /
    
      $ (función () {
        $ ('html'). on ('click.dropdown.data-api', clearMenus)
        $ ('cuerpo')
          .on ('click.dropdown', '.dropdown form', función (e) {e.stopPropagation ()})
          .on ('click.dropdown.data-api', alternar, Dropdown.prototype.toggle)
      })
    
    } (window.jQuery);